# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static, unit

[vars]
src_path = {toxinidir}/src/
test_path = {toxinidir}/tests/
lib_path = {toxinidir}/lib/charms/loki_k8s/
all_path = {[vars]src_path} {[vars]test_path} {[vars]lib_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
passenv =
  PYTHONPATH
  HOME
  PATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
    codespell {[vars]lib_path}
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache

[testenv:static]
description = Run static analysis checks
deps =
    -r{toxinidir}/requirements.txt
    mypy
    types-PyYAML
    pytest
    pytest-operator
    juju
    types-setuptools
    types-toml
    types-requests
commands =
    mypy {[vars]all_path} {posargs}
    mypy --python-version 3.5 {[vars]lib_path} {posargs}

[testenv:unit]
description = Run unit tests
deps =
    -r{toxinidir}/requirements.txt
    pytest
    coverage[toml]
    deepdiff
commands =
    coverage run \
      --source={[vars]src_path},{[vars]lib_path} \
      -m pytest -v -s --tb native {posargs} {[vars]test_path}/unit
    coverage report -m

[testenv:integration]
description = Run integration tests
deps =
    git+https://github.com/juju/python-libjuju.git
    #juju
    pytest
    git+https://github.com/charmed-kubernetes/pytest-operator.git
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {toxinidir}/tests/integration

[testenv:integration-lma]
description = Run lma bundle integration tests but with loki built from source
lma_bundle_dir = {envtmpdir}/lma-light-bundle
deps =
    # deps from lma-bundle - these are needed here because will be running pytest on lma-bundle
    jinja2
    git+https://github.com/juju/python-libjuju.git
    pytest
    git+https://github.com/charmed-kubernetes/pytest-operator.git
allowlist_externals =
    git
commands =
    git clone --single-branch --depth=1 https://github.com/canonical/lma-light-bundle.git {[testenv:integration-lma]lma_bundle_dir}
    # run pytest on the integration tests of the lma bundle, but override loki with path to
    # this source dir
    pytest -v --tb native --log-cli-level=INFO -s --loki={toxinidir} {posargs} {[testenv:integration-lma]lma_bundle_dir}/tests/integration

[testenv:check]
depends =
    lint
    static

[coverage:run]
relative_files = True
